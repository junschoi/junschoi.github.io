<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mojibake on Jun Choi</title><link>https://junschoi.github.io/tags/mojibake/</link><description>Recent content in mojibake on Jun Choi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 20 Jan 2021 03:55:00 +0000</lastBuildDate><atom:link href="https://junschoi.github.io/tags/mojibake/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing Mojibake using Python and ftfy</title><link>https://junschoi.github.io/posts/ftfy_guide/</link><pubDate>Wed, 20 Jan 2021 03:55:00 +0000</pubDate><guid>https://junschoi.github.io/posts/ftfy_guide/</guid><description>Have you ever had this problem where foreign languages appear in gibberish?
Mojibake (文字化け) occurs when someone has encoded Unicode with one standard and decoded it with a different one. The result is the garbled text that you see in the picture above. In Japanese, the word literally translates to “character changing”.
This was a problem back when Unicode wasn’t around and different countries were using their own encoding systems.</description></item></channel></rss>